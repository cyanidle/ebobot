# Available services: 
# servos_service, prediction_service
# ohm_reader_service, adjust_pos_service, pin_service
"Static":
  - "Adjust":
    - "adjust_pos_service":
      - "empty": 0 #even if the call is empty you should state at least one argument in static call
  ###################
  - "ArmUp":
    - "servos_service":
      - "num": 0
      - "state": 80
  - "ArmDown":
    - "servos_service":
      - "num": 0
      - "state": 0
  #############
  - "ArmHalfUp":
    - "servos_service":
      - "num": 0
      - "state": 60
  ##
  - "ArmHalfDown":
    - "servos_service":
      - "num": 0
      - "state": 36
#######################
  - "Ohms":
    - "ohm_reader_service":
      - "pin": 0 #(read ohms on "num" analog pin to ground)
  - "PumpOn":
    - pin_service:
      - pin: 48
      - digital: true
      - write: true
      - pullup: false
      - value: 1
  - "PumpOff":
    - pin_service: 
      - pin: 48
      - digital: true
      - write: true
      - pullup: false
      - value: 0
  - "ValveOn":
    - pin_service:
      - pin: 47
      - digital: true
      - write: true
      - pullup: false
      - value: 1
  - "ValveOff":
    - pin_service: 
      - pin: 47
      - digital: true
      - write: true
      - pullup: false
      - value: 0
  - "AdjustOn":
    - adjust_toggle_service:
      - toggle: true
  - "AdjustOff":
    - adjust_toggle_service:
      - toggle: false




#########
"Dynamic": #plain call of service, but one at a time!
  - "Example": #with kwargs!
    - service_name # call with args passed as: {service_arg_1: arg1, service_arg_2: arg2}
  - "MoveServo":
    - "servos_service"
  - "ShowNumber":
    - "prediction_service"
  - "OhmReader":
    - "ohm_reader_service"